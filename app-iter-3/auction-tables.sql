-- auction-tables.sql -- SQL table definitions
-- Auction Web Application Project
--
-- C S 105: PHP/SQL, Spring 2014, J. Thywissen
-- The University of Texas at Austin
--


-- __________________  Dump Tables to Start Fresh __________________
DROP TABLE IF EXISTS PERSON;
DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS ADDRESS_TYPE;
DROP TABLE IF EXISTS BILLING_INFO;
DROP TABLE IF EXISTS CARD_TYPE;
DROP TABLE IF EXISTS USER_REVIEW;
DROP TABLE IF EXISTS LOGIN;
DROP TABLE IF EXISTS AUCTION;
DROP TABLE IF EXISTS AUCTION_STATUS;
DROP TABLE IF EXISTS ITEM_CATEGORY;
DROP TABLE IF EXISTS ITEM_CONDITION;
DROP TABLE IF EXISTS BID;
DROP TABLE IF EXISTS WATCHED_ITEMS;


-- __________________  Create Tables Fresh __________________
CREATE TABLE PERSON (
	USER_ID INTEGER PRIMARY KEY,
	USERNAME VARCHAR(40) NOT NULL,
	LAST_NAME VARCHAR(96) NOT NULL,
	FIRST_NAME VARCHAR(96) NOT NULL,
	EMAIL_ADDRESS VARCHAR(255) NOT NULL,
	USER_PHOTO MEDIUMBLOB );

CREATE TABLE ADDRESS (
	ADDRESS_ID INTEGER PRIMARY KEY,
	USER_ID INTEGER NOT NULL,
	KIND INTEGER NOT NULL,
	NAME VARCHAR(255) NOT NULL,
	STREET_1 VARCHAR(100) NOT NULL,
	STREET_2 VARCHAR(100),
    CITY VARCHAR(75) NOT NULL,
    STATE VARCHAR(2) NOT NULL,
    ZIP INTEGER NOT NULL  );

CREATE TABLE ADDRESS_TYPE (
	ADDRESS_TYPE_ID INTEGER PRIMARY KEY,
	NAME VARCHAR(40) NOT NULL );

CREATE TABLE BILLING_INFO (
    BILLING_INFO_ID INTEGER PRIMARY KEY,
	USER_ID INTEGER NOT NULL,
	LAST_NAME VARCHAR(96) NOT NULL,
	FIRST_NAME VARCHAR(96) NOT NULL,
	CARD_TYPE INTEGER NOT NULL,
	CARD_NUMBER VARCHAR(19) NOT NULL,
	EXP_MONTH INTEGER NOT NULL,
	EXP_DAY INTEGER NOT NULL,
	SECURITY_CODE INTEGER NOT NULL ); 

CREATE TABLE CARD_TYPE (
	CARD_TYPE_ID INTEGER PRIMARY KEY,
	CARD_NAME VARCHAR(20) NOT NULL );

CREATE TABLE USER_REVIEW (
	USER_REVIEW_ID INTEGER PRIMARY KEY,
	USER_ID_FOR INTEGER NOT NULL,
	USER_ID_BY INTEGER NOT NULL,
	RELIABILITY INTEGER NOT NULL,
	HONESTY INTEGER NOT NULL,
	TIMELINESS INTEGER NOT NULL,
	OVERALL INTEGER NOT NULL,
	BUY_AGAIN BOOLEAN NOT NULL );

CREATE TABLE LOGIN (
	USER_ID INTEGER PRIMARY KEY,
	PWD_HASH VARCHAR(255) NOT NULL );

CREATE TABLE AUCTION (
	AUCTION_ID INTEGER PRIMARY KEY,
	STATUS INTEGER NOT NULL,
	SELLER INTEGER NOT NULL,
    CURRENT_BID_ID INTEGER,
	STARTING_BID NUMERIC(7,2),
	RESERVE_PRICE NUMERIC(7,2),
	OPEN_TIME TIMESTAMP NOT NULL,
	CLOSE_TIME TIMESTAMP NOT NULL,
	ITEM_CATEGORY INTEGER,
	ITEM_NAME VARCHAR(78),
	ITEM_DESCRIPTION TEXT,
	ITEM_CONDITION INTEGER NOT NULL,
	ITEM_PHOTO MEDIUMBLOB,
	PAID BOOLEAN );

CREATE TABLE AUCTION_STATUS (
	AUCTION_STATUS_ID INTEGER PRIMARY KEY,
	NAME VARCHAR(20) NOT NULL );

CREATE TABLE ITEM_CATEGORY (
	ITEM_CATEGORY_ID INTEGER PRIMARY KEY,
	NAME VARCHAR(78) NOT NULL );

CREATE TABLE ITEM_CONDITION (
	ITEM_CONDITION_ID INTEGER PRIMARY KEY,
	NAME VARCHAR(20) NOT NULL );

CREATE TABLE BID (
	BID_ID INTEGER PRIMARY KEY,
	BIDDER INTEGER NOT NULL,
	AUCTION INTEGER NOT NULL,
	BID_TIME TIMESTAMP NOT NULL,
	AMOUNT NUMERIC(9,2) NOT NULL );

CREATE TABLE WATCHED_ITEMS (
    WATCHED_ITEMS_ID INTEGER PRIMARY KEY,
	USER_ID INTEGER NOT NULL, 
	ITEM_ID INTEGER NOT NULL );


-- __________________  Create Indecies __________________
-- CREATE INDEX AUCTION_STATUS_NAME_INDEX ON AUCTION_STATUS (NAME);
-- CREATE INDEX ITEM_CATEGORY_NAME_INDEX ON ITEM_CATEGORY (NAME);
-- CREATE INDEX AUCTION_STATUS_INDEX ON AUCTION (STATUS);
-- CREATE INDEX AUCTION_SELLER_INDEX ON AUCTION (SELLER);
-- CREATE INDEX AUCTION_ITEM_CATEGORY_INDEX ON AUCTION (ITEM_CATEGORY);
-- CREATE INDEX BID_AUCTION_INDEX ON BID (AUCTION);
-- CREATE INDEX BID_BIDDER_INDEX ON BID (BIDDER);


-- __________________  Add Foreign Keys __________________
ALTER TABLE ADDRESS ADD FOREIGN KEY (USER_ID) REFERENCES PERSON(USER_ID);
ALTER TABLE ADDRESS ADD FOREIGN KEY (KIND) REFERENCES ADDRESS_TYPE(ADDRESS_TYPE_ID);
ALTER TABLE BILLING_INFO ADD FOREIGN KEY (USER_ID) REFERENCES PERSON(USER_ID);
ALTER TABLE BILLING_INFO ADD FOREIGN KEY (CARD_TYPE) REFERENCES CARD_TYPE(CARD_TYPE_ID);
ALTER TABLE USER_REVIEW ADD FOREIGN KEY (USER_ID_FOR) REFERENCES PERSON(USER_ID);
ALTER TABLE USER_REVIEW ADD FOREIGN KEY (USER_ID_BY) REFERENCES PERSON(USER_ID);
ALTER TABLE LOGIN ADD FOREIGN KEY (USER_ID) REFERENCES PERSON(USER_ID);
ALTER TABLE AUCTION ADD FOREIGN KEY (SELLER) REFERENCES PERSON(USER_ID);
ALTER TABLE AUCTION ADD FOREIGN KEY (STATUS) REFERENCES AUCTION_STATUS(AUCTION_STATUS_ID);
ALTER TABLE AUCTION ADD FOREIGN KEY (ITEM_CATEGORY) REFERENCES ITEM_CATEGORY(ITEM_CATEGORY_ID);
ALTER TABLE AUCTION ADD FOREIGN KEY (CURRENT_BID_ID) REFERENCES BID(BID_ID);
ALTER TABLE AUCTION ADD FOREIGN KEY (ITEM_CONDITION) REFERENCES ITEM_CONDITION(ITEM_CONDITION_ID);
ALTER TABLE BID ADD FOREIGN KEY (BIDDER) REFERENCES PERSON(USER_ID);
ALTER TABLE BID ADD FOREIGN KEY (AUCTION) REFERENCES AUCTION(AUCTION_ID);
ALTER TABLE WATCHED_ITEMS ADD FOREIGN KEY (USER_ID) REFERENCES PERSON(USER_ID);

-- __________________  Dummy data __________________
INSERT INTO PERSON VALUES (1, 'bsmith', 'Smith', 'Bill', 'bill.smith@example.com', NULL);
INSERT INTO PERSON VALUES (2, 'adent', 'Dent', 'Arthur', 'a.dent@example.com', NULL);
INSERT INTO PERSON VALUES (3, 'tmac', 'McMillan', 'Tricia', 'trillian@example.com', NULL);
INSERT INTO PERSON VALUES (4, 'preford', 'Prefect', 'Ford', 'ix@example.com', NULL);

INSERT INTO ADDRESS VALUES (1, 1, 1, 'Art Dent', '123 Test Ave', 'Unit A', 'Austin', 'TX', 78755);
INSERT INTO ADDRESS VALUES (2, 2, 1, 'Tracy McMillan', '456 Dummy St', NULL, 'New York', 'NY', 10012);
INSERT INTO ADDRESS VALUES (3, 2, 2, 'Tricia McMillan', '789 Something', 'Apt No.', 'New York', 'NY', 10012);
INSERT INTO ADDRESS VALUES (4, 3, 2, 'Chev Perfect', '246 Addr', NULL, 'Boston', 'MA', 02111);

INSERT INTO ADDRESS_TYPE VALUES (1, 'Billing');
INSERT INTO ADDRESS_TYPE VALUES (2, 'Shipping');

INSERT INTO BILLING_INFO VALUES (1, 1, 'Smith', 'Bill', 1, '1111-2222-3333-4444', 01, 01, 000);
INSERT INTO BILLING_INFO VALUES (2, 2, 'Dent', 'Art', 1, '2222-3333-4444-5555', 01, 01, 000);
INSERT INTO BILLING_INFO VALUES (3, 3, 'McMillan', 'Tricia', 2, '3333-4444-5555-6666', 02, 02, 111);
INSERT INTO BILLING_INFO VALUES (4, 4, 'Prefect', 'Ford', 3, '4444-5555-6666-7777', 03, 03, 333);

INSERT INTO CARD_TYPE VALUES (1, 'Visa');
INSERT INTO CARD_TYPE VALUES (2, 'Mastercard');
INSERT INTO CARD_TYPE VALUES (3, 'Discover');

INSERT INTO USER_REVIEW VALUES (1, 1, 2, 5, 5, 5, 5, TRUE);
INSERT INTO USER_REVIEW VALUES (2, 1, 3, 5, 4, 5, 5, TRUE);
INSERT INTO USER_REVIEW VALUES (3, 2, 3, 4, 4, 4, 4, TRUE);
INSERT INTO USER_REVIEW VALUES (4, 3, 2, 1, 1, 1, 1, FALSE);

INSERT INTO AUCTION VALUES (1001, 1, 1, 2, 5.00, 20.00, '2014-02-02 15:37:00', '2014-02-25 23:00:00', 7, 'Towels', 'Slightly used towels, set of 42', 3, NULL);
INSERT INTO AUCTION VALUES (1002, 1, 1, 4, 5.00, 40.00, '2014-02-02 17:05:00', '2014-02-25 23:00:00', 3, '"My Favourite Bathtime Gurgles" by Grunthos the Flatulent', 'Grunthos'' 12-book epic.  Not to be missed.  Was to be presented at Mid-Galactic Arts Nobbling Council, but the poet''s death prevented its presentation.', 2, NULL);
INSERT INTO AUCTION VALUES (1003, 1, 2, 6, 3.00, 30.00, '2014-02-02 17:06:00', '2014-02-25 23:00:00', 10, 'Toasting knife', 'Bread knife that toasts the bread as you cut it.', 1, NULL);
INSERT INTO AUCTION VALUES (1004, 2, 2, NULL, 1.00, 30.00, '2014-02-12 10:22:00', '2014-02-25 23:00:00', 11, 'Beach Ball', "This is a beach ball.  It's really cool.  Buy it.", 5, NULL);
INSERT INTO AUCTION VALUES (1005, 3, 2, 7, 50.00, 100.00, '2014-02-12 10:23:00', '2014-02-25 23:00:00', 8, 'Big Ring', 'This is a really cool, shiny ring.  Makes a great gift.', 4, NULL);
INSERT INTO AUCTION VALUES (1006, 4, 2, NULL, 100.00, 0.00, '2014-02-12 10:24:00', '2014-02-25 23:00:00', 2, 'Mona Lisa', 'The famous painting.  Don\'t ask where I got it.', 2, NULL);

INSERT INTO ITEM_CONDITION VALUES(1, 'New');
INSERT INTO ITEM_CONDITION VALUES(2, 'Very Good');
INSERT INTO ITEM_CONDITION VALUES(3, 'Good');
INSERT INTO ITEM_CONDITION VALUES(4, 'Fair');
INSERT INTO ITEM_CONDITION VALUES(5, 'Poor');

INSERT INTO AUCTION_STATUS VALUES (1, 'Open');
INSERT INTO AUCTION_STATUS VALUES (2, 'Cancelled');
INSERT INTO AUCTION_STATUS VALUES (3, 'Closed');
INSERT INTO AUCTION_STATUS VALUES (4, 'Failed');

INSERT INTO ITEM_CATEGORY VALUES (1, 'Antiques');
INSERT INTO ITEM_CATEGORY VALUES (2, 'Art & Collectibles');
INSERT INTO ITEM_CATEGORY VALUES (3, 'Books & Movies & Music');
INSERT INTO ITEM_CATEGORY VALUES (4, 'Cars');
INSERT INTO ITEM_CATEGORY VALUES (5, 'Clothing');
INSERT INTO ITEM_CATEGORY VALUES (6, 'Computers & Electronics');
INSERT INTO ITEM_CATEGORY VALUES (7, 'Home');
INSERT INTO ITEM_CATEGORY VALUES (8, 'Jewelry');
INSERT INTO ITEM_CATEGORY VALUES (9, 'Musical Instruments');
INSERT INTO ITEM_CATEGORY VALUES (10, 'Tools');
INSERT INTO ITEM_CATEGORY VALUES (11, 'Toys');

INSERT INTO BID VALUES (1, 2, 1001, '2014-02-02 15:40:00', 6.00);
INSERT INTO BID VALUES (2, 3, 1001, '2014-02-02 15:41:00', 6.50);
INSERT INTO BID VALUES (3, 3, 1002, '2014-02-02 17:20:00', 16.00);
INSERT INTO BID VALUES (4, 2, 1002, '2014-02-02 17:25:00', 20.00);
INSERT INTO BID VALUES (5, 3, 1003, '2014-02-02 18:25:00', 10.00);
INSERT INTO BID VALUES (6, 1, 1003, '2014-02-02 18:25:00', 15.00);
INSERT INTO BID VALUES (7, 2, 1005, '2014-02-12 10:25:30', 12.50);

INSERT INTO WATCHED_ITEMS VALUES (1, 1, 1); 
INSERT INTO WATCHED_ITEMS VALUES (2, 2, 1); 
INSERT INTO WATCHED_ITEMS VALUES (3, 1, 2); 
INSERT INTO WATCHED_ITEMS VALUES (4, 3, 2); 
INSERT INTO WATCHED_ITEMS VALUES (5, 3, 3); 


-- __________________  Create Sequence Generator __________________
DROP TABLE SEQ;
DROP FUNCTION NEXT_SEQ_VALUE;

CREATE TABLE SEQ (
    NAME VARCHAR(30) PRIMARY KEY,
    CURRENT_VALUE INTEGER NOT NULL );


-- The use of LAST_INSERT_ID is a MySQL-specific trick to
-- eliminate the need for an explicit transaction here.

-- From: Zaitsev, Peter. "Stored function to generate sequences". MySQL
--   Performance Blog. Pleasanton, Calif.: Percona LLC, 2008 Apr 2.
--   URL: http://www.mysqlperformanceblog.com/2008/04/02/stored-function-to-generate-sequences/

delimiter //
CREATE FUNCTION NEXT_SEQ_VALUE(SEQ_NAME VARCHAR(30))
    RETURNS INT
    MODIFIES SQL DATA
BEGIN
    UPDATE SEQ
        SET
            CURRENT_VALUE = LAST_INSERT_ID(CURRENT_VALUE+1)
        WHERE NAME = SEQ_NAME;
    RETURN LAST_INSERT_ID();
END
//
delimiter ;


INSERT INTO SEQ SELECT 'ADDRESS', MAX(ADDRESS_ID) FROM ADDRESS;
INSERT INTO SEQ SELECT 'ADDRESS_TYPE', MAX(ADDRESS_TYPE_ID) FROM ADDRESS_TYPE;
INSERT INTO SEQ SELECT 'AUCTION', MAX(AUCTION_ID) FROM AUCTION;
INSERT INTO SEQ SELECT 'AUCTION_STATUS', MAX(AUCTION_STATUS_ID) FROM AUCTION_STATUS;
INSERT INTO SEQ SELECT 'BID', MAX(BID_ID) FROM BID;
INSERT INTO SEQ SELECT 'BILLING_INFO', MAX(BILLING_INFO_ID) FROM BILLING_INFO;
INSERT INTO SEQ SELECT 'CARD_TYPE', MAX(CARD_TYPE_ID) FROM CARD_TYPE;
INSERT INTO SEQ SELECT 'ITEM_CATEGORY', MAX(ITEM_CATEGORY_ID) FROM ITEM_CATEGORY;
INSERT INTO SEQ SELECT 'ITEM_CONDITION', MAX(ITEM_CONDITION_ID) FROM ITEM_CONDITION;
INSERT INTO SEQ SELECT 'LOGIN', MAX(LOGIN_ID) FROM LOGIN;
show warnings;
INSERT INTO SEQ SELECT 'PERSON', MAX(USER_ID) FROM PERSON;
INSERT INTO SEQ SELECT 'USER_REVIEW', MAX(USER_REVIEW_ID) FROM USER_REVIEW;
INSERT INTO SEQ SELECT 'WATCHED_ITEMS', MAX(WATCHED_ITEMS_ID) FROM WATCHED_ITEMS;
