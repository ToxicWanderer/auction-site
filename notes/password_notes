trapdoor function - easy to do one way, hard to go back

store hash and salt
when comparing, add salt to pwd, hash, and compare

--- whenever pwds are involved ---
1. encrypt (use HTTPS)
2. use POST requests, not GET requests because GET will show up in URL (and logs, disk, proxy logs..)
3. input type="password"
4. store in a secure password hash (blowfish, not MD5 or SHA-1)
5. use PHP session to store user id and call session_regenerate_id(true) on permissions change (login/ logout)


--- forcing https ---
if(!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] !== 'on') { 
	// we're not running on https
	header('Location: https://'.$_SERVER['SERVER_NAME'].$_SERVER['REQUEST_URI']);
	exit(0);
} else {
	// we're good
}

--- creating pwds in php ---
$hashedpwd = password_hash(password, PASSWORD_BCRYPT);

--- checking pwds in php ---
password_verify(entered_pwd, hash_from_database);

--- upon successful verify ---
session_regenerate_id(true);
$_SESSION['LOGGED_IN_ID'] = user_id;
